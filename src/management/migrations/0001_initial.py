# Generated by Django 5.0.2 on 2024-04-28 12:51

import datetime
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import src.management.utils
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('avatar', models.ImageField(default='/avatars/no_avatar.png', upload_to='avatars/', verbose_name='Avatar')),
                ('phone', models.CharField(max_length=15, unique=True, verbose_name='Phone Number')),
                ('middle_name', models.CharField(blank=True, max_length=50, verbose_name='Middle name')),
                ('birth_date', models.DateField(default=datetime.date(1900, 1, 1), verbose_name='Birth date')),
                ('pinfl', models.CharField(max_length=14, verbose_name='PINFL')),
                ('passport', models.CharField(blank=True, max_length=9, null=True, verbose_name='Passport serial and number')),
                ('passport_attachment', models.FileField(blank=True, null=True, upload_to=src.management.utils.get_passport_path, verbose_name='Passport attachment')),
                ('additional_information', models.TextField(blank=True, null=True, verbose_name='Additional information')),
                ('verify_code', models.PositiveSmallIntegerField(default=0, verbose_name='Verify Code')),
                ('verify_time', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Verify Time')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Created Time')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Updated Time')),
                ('user_type', models.CharField(choices=[('admin', 'Admin'), ('doctor', 'Doctor'), ('patient', 'Patient')], max_length=10, verbose_name='User type')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'db_table': 'user',
            },
        ),
        migrations.CreateModel(
            name='District',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='District')),
            ],
            options={
                'verbose_name': 'District',
                'verbose_name_plural': 'Districts',
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Admin',
                'db_table': 'admin',
            },
            bases=('management.user', models.Model),
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Doctor',
                'verbose_name_plural': 'Doctors',
                'db_table': 'doctor',
            },
            bases=('management.user',),
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('user_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to=settings.AUTH_USER_MODEL)),
                ('age', models.PositiveSmallIntegerField(verbose_name='Age')),
                ('gender', models.CharField(choices=[('male', 'Male'), ('female', 'Female')], max_length=6, verbose_name='Gender')),
                ('ethnicity', models.CharField(blank=True, choices=[('asian', 'Asian'), ('european', 'European'), ('other', 'Other')], max_length=15, null=True, verbose_name='Ethnicity')),
                ('social_group', models.CharField(blank=True, choices=[('child', 'Child'), ('adult', 'Adult'), ('pensioner', 'Pensioner'), ('disabled', 'Disabled')], max_length=20, null=True, verbose_name='Social group')),
                ('profession', models.CharField(blank=True, choices=[('farmer', 'Farmer'), ('worker', 'Worker'), ('employee', 'Employee'), ('freelancer', 'Freelancer'), ('priest', 'Priest'), ('other', 'Other')], max_length=20, null=True, verbose_name='Profession')),
                ('demographic_additional', models.TextField(blank=True, null=True, verbose_name='Demographic additional information')),
                ('additional_phone_number', models.CharField(blank=True, max_length=15, null=True, verbose_name='Additional phone Number')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, verbose_name='Email')),
                ('telegram_username', models.CharField(blank=True, max_length=50, null=True, verbose_name='Telegram username')),
                ('region', models.CharField(blank=True, max_length=150, null=True, verbose_name='Region')),
                ('city', models.CharField(blank=True, max_length=150, null=True, verbose_name='City')),
                ('mahalla', models.CharField(blank=True, max_length=150, null=True, verbose_name='Mahalla')),
                ('street', models.CharField(blank=True, max_length=150, null=True, verbose_name='Street')),
                ('building', models.CharField(blank=True, max_length=10, null=True, verbose_name='Building')),
                ('latitude', models.DecimalField(blank=True, decimal_places=20, max_digits=40, null=True, verbose_name='Latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=20, max_digits=40, null=True, verbose_name='Longitude')),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_patients', to='management.doctor', verbose_name='Created doctor')),
                ('curator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='patients', to='management.doctor', verbose_name='Curator doctor')),
                ('district', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='management.district', verbose_name='District')),
            ],
            options={
                'verbose_name': 'Patient',
                'verbose_name_plural': 'Patients',
                'db_table': 'patient',
            },
            bases=('management.user',),
        ),
        migrations.CreateModel(
            name='AttachedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=90, verbose_name='Title')),
                ('attachment', models.FileField(max_length=255, upload_to=src.management.utils.get_file_path, verbose_name='Attachment')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='management.patient', verbose_name='Patient')),
            ],
            options={
                'verbose_name': 'Attached file',
                'verbose_name_plural': 'Attached files',
            },
        ),
    ]
